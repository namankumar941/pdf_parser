<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Upload PDF</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      body {
        background: #f4f6f8;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .upload-card {
        background-color: #ffffff;
        padding: 2rem;
        border-radius: 1rem;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 450px;
      }

      .form-label {
        font-weight: 600;
      }

      .btn-primary {
        width: 100%;
        font-weight: 600;
      }

      .loading {
        display: none;
      }

      .loading.show {
        display: inline-block;
      }

      .spinner-border {
        width: 1rem;
        height: 1rem;
        margin-right: 0.5rem;
      }
    </style>
  </head>
  <body>
    <div class="upload-card">
      <h4 class="mb-4 text-center">Upload Your PDF</h4>
      <form id="uploadForm" action="/postUploadPdf" method="post" enctype="multipart/form-data">
        <div class="mb-3">
          <label for="pdf" class="form-label">Select PDF File</label>
          <input
            type="file"
            required
            accept=".pdf"
            class="form-control"
            id="pdf"
            name="pdf"
            aria-describedby="pdfHelp"
          />
          <div id="pdfHelp" class="form-text">Only PDF files are allowed.</div>
        </div>
        <div class="mb-3">
          <label for="apiChoice" class="form-label">Select AI Model</label>
          <select class="form-select" id="apiChoice" name="apiChoice" required>
            <option value="">Choose an AI model</option>
            <option value="openai">OpenAI</option>
            <option value="claude">Claude</option> 
          </select>
        </div>
        <div class="mb-3">
          <button type="submit" id="submitBtn" class="btn btn-primary">Submit</button>
          <div id="loadingText" class="loading text-center">
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            Processing PDF...
          </div>
        </div>
      </form>
    </div>

    <!-- Error Modal -->
    <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="errorModalLabel">Error</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body" id="errorMessage">
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
      document.getElementById('uploadForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Hide submit button and show loading
        document.getElementById('submitBtn').style.display = 'none';
        document.getElementById('loadingText').classList.add('show');
        
        try {
          const formData = new FormData(this);
          const response = await fetch('/postUploadPdf', {
            method: 'POST',
            body: formData
          });
          
          const data = await response.text();
          
          try {
            // Try to parse as JSON
            const jsonData = JSON.parse(data);
            
            // If it's JSON and has error or success is false, show error
            if (jsonData.error || !jsonData.success) {
              const errorMessage = jsonData.error || 'An error occurred while processing the PDF';
              document.getElementById('errorMessage').textContent = errorMessage;
              const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
              errorModal.show();
              
              // Reset form state
              document.getElementById('submitBtn').style.display = 'block';
              document.getElementById('loadingText').classList.remove('show');
              return;
            }
            
            // If it's successful JSON with HTML content
            if (jsonData.accumulatedText) {
              document.open();
              document.write(jsonData.accumulatedText);
              document.close();
              return;
            }
          } catch (parseError) {
            // If it's not JSON, treat as HTML content
            document.open();
            document.write(data);
            document.close();
            return;
          }
        } catch (error) {
          // Show network or other errors in modal
          document.getElementById('errorMessage').textContent = error.message;
          const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
          errorModal.show();
          
          // Reset form state
          document.getElementById('submitBtn').style.display = 'block';
          document.getElementById('loadingText').classList.remove('show');
        }
      });
    </script>
  </body>
</html>
